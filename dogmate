#!/bin/bash
# tmate control script
. /dog/colors

#old
T_HOST="ssh.os.dog"
T_PORT=22
FINGERPRINT="SHA256:2HqU8ShGUt3CwK9PCfp2PvSJbt7/BSyU2vtbtOlMHrE"
ED25519_FINGERPRINT="SHA256:1vbzBDcT6z6yPr9hM5uozyaLj7IhzYhstVOJHEZ0a+A"

SOCKET="/tmp/tmate.sock"

NEED_VER="240"
CFG_FILE=/dog/cfg/tmate.conf
LOG=/dog/log/tmate.log

#Args
ATTACH=

CMD="/dog/sbin/tmate"
	
showHelp () {
	bname=`basename $0`
	echo -e "Usage: ${CYAN}$bname [ arg ] command${WHITE}"
	echo ""
	echo -e "Commands:"
	echo -e "${GREEN}  setup       ${WHITE}Setup tmate configuration"
	echo ""
	echo -e "${GREEN}  start       ${WHITE}setup if needed, than start session"
	echo -e "${GREEN}  stop        ${WHITE}Stop session"
	echo -e "${GREEN}  restart     ${WHITE}Restart session"
	echo -e "${GREEN}  go          ${WHITE}Force setup and start session"
	echo -e "${GREEN}  show        ${WHITE}Show connection information"
	echo -e "${GREEN}  attach      ${WHITE}Attach to existing session"
	
	echo ""
	echo -e "Options:"
	echo -e "${GREEN}  -a,--attach ${WHITE}Attach to session after starting"

	echo -e "${GREEN}  -h,--help   ${WHITE}Show this message"
}

setup () {
	local cfg="
set -g tmate-server-host $T_HOST
set -g tmate-server-port $T_PORT
set -g tmate-server-rsa-fingerprint $FINGERPRINT
set -g tmate-server-ed25519-fingerprint $ED25519_FINGERPRINT

# set-option -g -q mouse on
# Toggle mouse on
bind-key M \
  set-option -g mouse on \;\
  display-message 'Mouse: ON'

# Toggle mouse off
bind-key m \
  set-option -g mouse off \;\
  display-message 'Mouse: OFF'

#unbind C-b 
#set -g prefix C-a
bind -n M-Left select-pane -L 
bind -n M-Right select-pane -R 
bind -n M-Up select-pane -U 
bind -n M-Down select-pane -D
# set active-inactive window styles
set -g window-style 'fg=colour247,bg=colour236'
set -g window-active-style 'fg=default,bg=colour234'

# Pane border
set -g pane-border-bg default
set -g pane-border-fg colour238

# Active pane border
set -g pane-active-border-bg default
set -g pane-active-border-fg blue

#send-keys q
"
	
	echo -e "$cfg" > $CFG_FILE	
}
show () {
	local link=`$CMD -S $SOCKET display -p '#{tmate_ssh}' 2>/dev/null`
	local webLink=`$CMD -S $SOCKET display -p '#{tmate_web}' 2>/dev/null`

	if [[ ! -z $link || ! -z $webLink ]]; then
		echo -e "$link"

		if [[ ! -z $webLink ]]; then
			echo -e "$webLink"
			echo -e "Link for browser:\n<a href='$webLink' target='blank'>$webLink</a>"
		fi
	fi
}
attach () {
	$CMD -f $CFG_FILE -S $SOCKET -2 attach-session -d
}

start () {
	if [[ ! -z  `pidof tmate` ]]; then
		echo -e "${CYAN}> tmate is already running${WHITE}"
		show
		exit 1
	fi
	
	if [[ ! -f $CFG_FILE ]]; then
		echo -e "${CYAN}> No config file, setup first${WHITE}"
		setup
	else
		echo -e "${CYAN}> Found config file ${CFG_FILE}${WHITE}"
	fi

	systemctl restart dogmate

	echo -en "${CYAN}> Waiting for connection${WHITE}"
	try=0
	while [[ $try -lt 100 ]]; do #30 sec
		data=`show`
		[[ ! -z $data ]] && break
		echo -en "${CYAN}.${WHITE}"
		sleep 0.3
		((try++))	
	done
	echo ""

	[[ $try -ge 30 ]] && echo -e "${LIGHTRED}Something goes wrong, connection can\`t be established${WHITE}" && exit 1
	
	echo -e "$data"
	[[ $ATTACH -eq 1 ]] && attach
}

stop () {
	[[ $1 == 'verbose' ]] && echo -e "${CYAN}> Stopping tmate service${WHITE}"
	systemctl stop dogmate

	[[ $1 == 'verbose' ]] && echo -e "${CYAN}> Stopping standalone tmate sessions${WHITE}"
	PID=`pidof tmate`
	if [[ ! -z $PID ]]; then
		kill -9 $PID
	else
		[[ $1 == 'verbose' ]] && echo -e "${CYAN}> There is no standalone tmate sessions${WHITE}"
	fi
}

while [ -n "$1" ]; do
	option=$1
	case $option in
		--help|-h)
			showHelp
			exit 0
		;;
		--version|-V)
			checkVer verbose
			exit 0
		;;
		--force|-f)
			FORCE=1
		;;
		--attach|-a)
			ATTACH=1
		;;
		setup|attach|start|stop|restart|go|show|start-cli)
			command=$option
		;;
		*)
			echo "Uncorrect argument $option"
		;;
	esac

	shift
done

[[ ! $command && $ATTACH -eq 1 ]] && command='attach' #short combination dogmate -a

case $command in
	setup)
		setup
	;;
	attach)
		attach
	;;
	start-cli) #only for service. Don`t use in manually
		echo "$CMD -f $CFG_FILE -S $SOCKET -F new-session -d"
		#if [[ $system == '18.04' ]]; then
			$CMD -f $CFG_FILE -S $SOCKET -F new-session -d
		#else
		#	$CMD -f $CFG_FILE -S $SOCKET new-session -d	
		#fi

		#$CMD -f $CFG_FILE -S $SOCKET -F new-session -d -c bash
	;;
	start)
		start		
	;;
	stop)
		echo -e "${CYAN}> Stopping tmate service${WHITE}"
		systemctl stop dogmate
		stop verbose
	;;
	restart)
		stop verbose
		start
	;;
	go)
		#stop
		setup
		systemctl start dogmate
	;;
	show)
		show
	;;
	*)
		echo -e "${LIGHTRED}No command specified${WHITE}"
		showHelp
		exit 1
	;;
esac
