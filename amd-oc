#!/bin/bash

[ -t 1 ] && . colors #source colors only if running in terminal
AMD_CFG="/sobaka/cfg/amd.cfg"
LOCK_FILE="/tmp/.amd-oc.lock"

if  [[ -e $LOCK_FILE ]]; then
	pid=`cat $LOCK_FILE`
	ps --pid $pid &>/dev/null
	[[ $? == 0 ]] && echo -e "${RED}It seems another copy of AMD Overclocking script is already running\nCooldown a bit :)${WHITE}" && exit 1
fi

echo $$ > $LOCK_FILE

n=$(gpu-detect AMD)
[[ $n == 0 ]]&& echo $(date --rfc-3339=seconds)" no AMD GPU(s) detected, exiting" && exit 1
echo -e $(date --rfc-3339=seconds)" $n "$LIGHTRED"AMD"$WHITE" GPU detected"
[[ ! -f $AMD_CFG ]]&& echo $(date --rfc-3339=seconds)" configuration file $AMD_CFG does not exist, exiting" && exit 1
. $AMD_CFG

#OC arrays
CORE_CLOCK=($CORE_CLOCK)
CORE_STATE=($CORE_STATE)
CORE_VOLTAGE=($CORE_VOLTAGE)
MEMORY_CLOCK=($MEMORY_CLOCK)
MEMORY_STATE=($MEMORY_STATE)
AMDMEMTWEAK=($AMDMEMTWEAK)

[[ ! $FAN ]]&& FAN[0]="A"
FAN=($FAN)

for (( i=0; i < $n; ++i )); do
	[[ ! ${CORE_CLOCK[$i]} && ! -z ${CORE_CLOCK[0]} ]]&& CORE_CLOCK[$i]=${CORE_CLOCK[-1]}
	[[ ! ${CORE_STATE[$i]} && ! -z ${CORE_STATE[0]} ]]&& CORE_STATE[$i]=${CORE_STATE[-1]}
	[[ ! ${CORE_VOLTAGE[$i]} && ! -z ${CORE_VOLTAGE[0]} ]]&& CORE_VOLTAGE[$i]=${CORE_VOLTAGE[-1]}
	[[ ! ${MEMORY_CLOCK[$i]} && ! -z ${MEMORY_CLOCK[0]} ]]&& MEMORY_CLOCK[$i]=${MEMORY_CLOCK[-1]}
	[[ ! ${MEMORY_STATE[$i]} && ! -z ${MEMORY_STATE[0]} ]]&& MEMORY_STATE[$i]=${MEMORY_STATE[-1]}
	[[ ! ${AMDMEMTWEAK[$i]} && ! -z ${AMDMEMTWEAK[0]} ]]&& MEMORY_STATE[$i]=${AMDMEMTWEAK[-1]}
	[[ ! ${FAN[$i]} && ! -z ${FAN[0]} ]]&& FAN[$i]=${FAN[-1]}
done

echo "Trying to apply next settings:"
echo -e ${CYAN}"Memory Clock:${WHITE}\t${MEMORY_CLOCK[@]}"
echo -e ${CYAN}"Core Clock:${WHITE}\t${CORE_CLOCK[@]}"
echo -e ${CYAN}"Core Voltage:${WHITE}\t${CORE_VOLTAGE[@]}"
echo -e ${CYAN}"Core State:${WHITE}\t${CORE_STATE[@]}"
echo -e ${CYAN}"Memory State:${WHITE}\t${MEMORY_STATE[@]}"
echo -e ${CYAN}"Memory Tweak:${WHITE}\t${AMDMEMTWEAK[@]}"
echo -e ${CYAN}"Fan:${WHITE}\t\t${FAN[@]}"
[ -t 1 ] && echo -e ${ITALIC}"*If there is not enough settings (i.e. you try to apply FAN 70 70 50,\nbut you have 5 GPU, last 2 GPU will use last available value = 50)"${WHITE}
echo -e $BROWN"================================================================"$WHITE
core_addr=(`ls -d /sys/class/drm/card[0-9]*/device/hwmon/hwmon[0-9]* | sed 's/\/hwmon\/hwmon[0-9]*//g'`)
#core_addr=(`ls -d /sys/class/drm/card[[:digit:]]/device/hwmon/hwmon? | sed 's/\/hwmon\/hwmon[0-9]*//g'`)

#restoring default pp_table
#if [[ -z $1 && $1 -ne "--firstrun" ]]; then
#	for ppfile in /tmp/pp_tables/card*/pp_table ; do
#		card=$(echo $ppfile | sed 's/.*card\([0-9]*\).*/\1/')
#		[[ -z $card ]] && echo "Can\`t find saved Power Play table. Try to reboot" && continue
#		dir="/sys/class/drm/card$card/device/pp_table"
#		[[ -z $dir ]] && echo "Can\`t find existing Power Play table. Try to reboot" && continue
#		cp $ppfile $dir
#		echo "Copying pp_table to $dir"
#	done
#fi

for  ((i=0; i < $n; i++)); do
	echo -e $LIGHTRED"GPU $i"$WHITE

#####################################################
#Core, mem, volt settings
#####################################################
#wolfamdctrl -i 0 --mem-state 2 --mem-clock 2000 --core-state 4 --core-clock 1100 --volt-state 4 --vddc-table-set 900
	card=$(echo ${core_addr[$i]} | sed 's/\/sys\/class\/drm\/card\([0-9]*\)\/device/\1/')
	#echo "Card $card, ${core_addr[$i]}"
	str="wolfamdctrl -i $card"
	if [[ ! -z ${CORE_STATE[$i]} && ! ${CORE_STATE[$i]} == "A" ]]; then
		str=$str" --core-state ${CORE_STATE[$i]}"
		[[ ${CORE_CLOCK[$i]} ]]&& str=$str" --core-clock ${CORE_CLOCK[$i]}"
		if [ ${CORE_VOLTAGE[$i]} ]; then
			volt_state=`echo -e $(wolfamdctrl -i $card --show-core | grep "DPM state ${CORE_STATE[$i]}" -A1) \
			| sed -e 's/)//g; s/.*entry \([0-9]*\)/\1/'`
			str=$str" --volt-state $volt_state --vddc-table-set ${CORE_VOLTAGE[$i]}"
		fi
	else
		if [ ${CORE_VOLTAGE[$i]} ]; then
			default_clock=`cat "${core_addr[$i]}/pp_dpm_sclk" | grep \* | sed -e 's/*//; s/:.*//'`
			volt_state=`echo -e $(wolfamdctrl -i $card --show-core | grep "DPM state $default_clock" -A1) \
			| sed -e 's/)//g; s/.*entry \([0-9]*\)/\1/'`
			str=$str" --volt-state $volt_state --vddc-table-set ${CORE_VOLTAGE[$i]}"
		fi
	fi
	if [ ${MEMORY_STATE[$i]} ]; then
		str=$str" --mem-state ${MEMORY_STATE[$i]}"
		[[ ${MEMORY_CLOCK[$i]} ]]&&	str=$str" --mem-clock ${MEMORY_CLOCK[$i]}"
	elif [ ${MEMORY_CLOCK[$i]} ]; then #mem clock is set, stat isn`t
		default_mem_state=`cat "${core_addr[$i]}/pp_dpm_mclk" | grep \* | sed -e 's/*//; s/:.*//'`
		echo "GPU$i Memory State isn\`t set, using current state ("$default_mem_state")"
		str=$str" --mem-state $default_mem_state --mem-clock ${MEMORY_CLOCK[$i]}"
	fi
	[[ $(echo $str | awk '{print length}') -gt 30 ]] && bash -c "$str"
	#29 is "wolfamdctrl -i 5", so it`s useless to do
	amdmemtweak --$i ${AMDMEMTWEAK[$i]}
	
#####################################################
#Core State section
#####################################################
	if [[ ${CORE_STATE[$i]} == "A" || ! ${CORE_STATE[$i]} ]]; then
		echo -e "${CYAN}Auto${WHITE} Core State selection."
		echo auto > ${core_addr[$i]}/power_dpm_force_performance_level
	else 
		echo -e "${CYAN}Manual${WHITE} Core State selection (${CYAN}P${CORE_STATE[$i]}${WHITE})."
		echo manual > ${core_addr[$i]}/power_dpm_force_performance_level
		echo ${CORE_STATE[$i]} > ${core_addr[$i]}/pp_dpm_sclk
	fi
#####################################################
#Fan section
#####################################################
	#fan_addr[$i]=$(ls -d ${core_addr[$i]}/hwmon/hwmon?)
	fan_addr[$i]=$(ls -d ${core_addr[$i]}/hwmon/hwmon[0-9]*)
	if (( ${FAN[$i]} == "A" )); then
		echo -e "${CYAN}Auto${WHITE} fan."
		echo 0 > ${fan_addr[$i]}/pwm1_enable
	else 
		echo -e "${CYAN}Manual${WHITE} fan (${FAN[$i]})." 
		echo 1 > ${fan_addr[$i]}/pwm1_enable
		let fan_adapted[$i]=${FAN[$i]}*255/100 #fan power is beetween 0 and 255
		echo ${fan_adapted[$i]} > ${fan_addr[$i]}/pwm1
	fi
	echo -e $BROWN"================================================================"$WHITE
done

rm $LOCK_FILE