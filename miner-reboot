#!/bin/bash
. /dog/colors
LOG_DIR="/dog/log"
#[[ -z $1 ]] && miner="claymore" || miner=$1
miner=$1
Miner=${miner^}
action=$2

logfile="${LOG_DIR}/${miner}.log"
reboot_logfile="${LOG_DIR}/${miner}_reboot.log"
[[ -f $reboot_logfile ]] && rm $reboot_logfile #remove old reboot log

function get_lastmsg () {
	local logtext="$1"

	case $miner in
		claymore)
			keywords="WATCHDOG|hangs"
		;;
		teamredminer)
			keywords="DEAD"
		;;
		t_rex*)
			keywords="is idle|Can't find nonce"
		;;
	esac
	
	local raw_msg=`echo "$logtext" | grep -m1 -E "$keywords"`

	case $miner in
		claymore)
			local msg=`echo "$raw_msg" | sed -e 's/.*WATCHDOG: //' | tr -dc '[:print:]'`
		;;
		teamredminer)
			local msg=`echo "$raw_msg" | sed 's/.*\(GPU [a-zA-Z0-9]*: detected DEAD ([.:a-zA-Z0-9]*)\).*/\1/' | tr -dc '[:print:]'`
		;;
		t_rex)
			#WARN: GPU #4: Gigabyte P106-100 is idle, last activity was 59 secs ago
			#TREX: Can't find nonce with device [ID=4, GPU #4], cuda exception in [synchronize, 51], an illegal instruction was encountered, try to reduce overclock to stabilize GPU state
			local msg=`echo "$raw_msg" | sed -e 's/.*GPU #\([0-9]*\).*/GPU \1 error/' | tr -dc '[:print:]'`
		;;
	esac


	echo "$msg" 
}

#save last messages about hanging cards
if [[ -f $logfile ]]; then
	tail -n 100 $logfile > $reboot_logfile
	#lastmsg_raw=`tac $reboot_logfile` | grep -m1 -E "$keywords" | sed -e 's/.*WATCHDOG: //' | tr -dc '[:print:]'`
	#tac $reboot_logfile2
	lastmsg=`get_lastmsg "$(tac $reboot_logfile)"`
fi

if [[ -z $lastmsg ]]; then
	lastmsg="$Miner Reboot"
else
	lastmsg="$Miner Reboot: $lastmsg"
fi

if [[ -f $reboot_logfile ]]; then
	#return="`date --rfc-3339=seconds` `echo -e \"${GREEN} Last 50 strings of $Miner log:${WHITE}\"`$LF`tail -n 20 $reboot_logfile | cut -f 1 -d ' ' --complement`" #| sed -e 's/\"//g; /^\s*$/d;'`
	return="`tail -n 100 $reboot_logfile`"
	echo "/dog/msg \"$lastmsg\" danger \"$return\""
	/dog/msg "$lastmsg" danger "$return"
else
	echo "/dog/msg \"$lastmsg\" danger \"$return\""
	/dog/msg "$lastmsg" danger "$return"
fi

#exit 0
nohup bash -c 'sreboot' > /tmp/nohup.log 2>&1 &

exit 0
