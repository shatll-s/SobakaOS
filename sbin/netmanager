#!/bin/bash
[ -t 1 ] && . colors
RIG_CFG="/dog/cfg/rig.cfg"

function stop () {
	#if [[ `systemctl list-units --type=service | grep netmngr` ]]; then
		systemctl stop netmngr
		pid=`ps -A | grep netmngr | awk '{print $1}'`
		[[ ! -z $pid ]] && kill -9 $pid
	#else
	#	:
	#	#echo "Net manager is not supported"
	#fi
}

function start () {
	#if [[ `systemctl list-units --type=service | grep netmngr` ]]; then
		systemctl stop netmngr
		pid=`ps -A | grep netmngr | awk '{print $1}'`
		[[ ! -z $pid ]] && kill -9 $pid

		. $RIG_CFG
		[[ ! $NETMANAGER_DISABLE ]] && systemctl start netmngr
	#else
	#	:
		#echo "Net manager is not supported"
	#fi
}

case $1 in
	start)
		start
	;;
	stop)
		stop
	;;
	check)
		[[ ! $2 ]] && echo "Not enough arguments" && exit 1
		iptables -C OUTPUT -p tcp --dport $2 -j DROP >/dev/null 2>&1
		exitcode=$?
		[[ $exitcode -eq 0 ]] && echo "Port is closed" || echo "Port is opened"
	;;
	open)
		[[ ! $2 ]] && echo "Not enough arguments" && exit 1
		iptables -C OUTPUT -p tcp --dport $2 -j DROP >/dev/null 2>&1
		exitcode=$?
		if [[ $exitcode -eq 0 ]]; then
			iptables -D OUTPUT -p tcp --dport $2 -j DROP
		fi
	;;
	close)
		[[ ! $2 ]] && echo "Not enough arguments" && exit 1
		iptables -C OUTPUT -p tcp --dport $2 -j DROP >/dev/null 2>&1
		exitcode=$?
		if [[ $exitcode -eq 1 ]]; then
			iptables -A OUTPUT -p tcp --dport $2 -j DROP
		fi
	;;
	*)
		bname=`basename $0`
		echo -e "Usage: ${CYAN}$bname start|stop|check|open|close${WHITE}"
	;;
esac
