#!/bin/bash
AMDMEMINFO_FILE=/tmp/amdmeminfo
. colors

n=$(gpu-detect AMD)
if [ $n == 0 ]; then
	echo "There are no AMD GPU detected, exiting"
	exit
fi
echo -e "$n "$LIGHTRED"AMD"$WHITE" GPU detected "$(date --rfc-3339=seconds)"\n"
core_addr_raw=(`ls -d /sys/class/drm/card[0-9]*/device | egrep 'card[0-9]{1,2}/'`)
for (( i=0; i < ${#core_addr_raw[@]}; i++ )); do
	gpu_busid_raw[$i]=$(cat ${core_addr_raw[$i]}/uevent | grep "PCI_SLOT_NAME" | sed 's/.*0000:\([0-9abcdefABCDEF]*\):.*/\1/')
done
IFS=$'\n' gpu_busid_sys=($(sort <<<"${gpu_busid_raw[*]}"))
unset IFS
for (( i=0; i < ${#gpu_busid_raw[@]}; i++ )) do
	for (( y=0; y < ${#gpu_busid_raw[@]}; y++ )) do
		[[ ${gpu_busid_sys[$i]} == ${gpu_busid_raw[$y]} ]] && core_addr[$i]=${core_addr_raw[$y]} && break
	done
done
y=0
for (( i=0; i < ${#core_addr[@]}; i++ )); do
	if [ $(cat ${core_addr[$i]}/uevent | grep "DRIVER" | sed -e 's/DRIVER\=\([a-z]*\)/\1/') == amdgpu ]; then #GPU is AMD
		card=$(echo ${core_addr[$i]} | sed 's/\/sys\/class\/drm\/card\([0-9]*\)\/device/\1/')
		gpu_name[$i]=$(cat $AMDMEMINFO_FILE | grep $(echo ${gpu_busid_sys[$i]}".00.0") | awk -F":" '{ print $3 }')
		[[ ${gpu_name[$i]} == *"Vega"* ]] && script="vegatool" || script="wolfamdctrl"
		fan_addr[$i]=$(ls -d ${core_addr[$i]}/hwmon/hwmon[0-9]*)
		temp_raw[$i]=`cat "${fan_addr[$i]}/temp1_input"` #temp1_input - current temp 
		temp[$i]=`expr ${temp_raw[$i]} / 1000` #temp format is something like 65000
		fan_raw[$i]=`cat "${fan_addr[$i]}/pwm1"`
		let fan[$i]=${fan_raw[$i]}*100/255
		#First line: PCI bus, address, temp, fan
		echo -e "${CYAN}GPU ${LIGHTCYAN}$y ${LIGHTRED}${gpu_name[$i]}${CYAN} `cat "${core_addr[$i]}/uevent" | grep "PCI_SLOT_NAME" | sed 's/PCI_SLOT_NAME=//'`\t ${core_addr[$i]}${WHITE}"

		#Second line: Core state, mem state
		echo -e $CYAN"Core state "$LIGHTCYAN`cat "${core_addr[$i]}/pp_dpm_sclk" | grep \* | sed 's/*//'` \
		$WHITE$CYAN"("`cat "${core_addr[$i]}/power_dpm_force_performance_level"`")\t" \
		"${CYAN}Mem state "$LIGHTCYAN`cat "${core_addr[$i]}/pp_dpm_mclk" | grep \* | sed 's/*//'`"${WHITE}"
		echo -e "${CYAN}Temp${LIGHTCYAN} ${temp[$i]}${WHITE}${CYAN}, Fan$LIGHTCYAN ${fan[$i]}${WHITE}"

		#Core clocks (cut, change place, etc)
		echo -e "${CYAN}State\tCore\tVoltage\t\tVolt.state${WHITE}"
		if [[ ${gpu_name[$i]} == *"Vega"* ]]; then
			echo -e $($script -i $card --show-core | grep "DPM" -A3) \
			| sed -e 's/VDDC\: /V/g; s/ (voltage table entry /\t\tV/g' \
			| sed -e 's/) Core clock: / /g' \
			| sed -e 's/DPM state /P/g; s/\: /\t/g' \
			| sed 's/\(P[0-9]*\t\)\(V[0-9]*\t\tV[0-9]*\) \([0-9]*\)/\n\1\3 \t\2/g; s/ P/P/g'
		else
			echo -e $($script -i $card --show-core | grep "DPM" -A3) \
			| sed -e 's/VDDC\: /V/g; s/ (voltage table entry /\t\tV/g' \
			| sed -e 's/) VDDC offset: [-0-9]* Core clock: / /g' \
			| sed -e 's/DPM state /P/g; s/\: /\t/g' \
			| sed 's/\(P[0-9]*\t\)\(V[0-9]*\t\tV[0-9]*\) \([0-9]*\)/\n\1\3 \t\2/g; s/ P/P/g'
		fi
		#Mem clocks
		echo -e $CYAN"Memory clocks:$WHITE"$($script -i $card --show-mem | grep "Memory clock" | sed 's/Memory clock\:/\\t/g' )
		$LINE
		(( y++ ))
	fi
done
