#!/bin/bash
. colors
miner="$1"
port="$2"
batch="$3"
miner2Wait="$4"

[[ ! `cat /etc/group | grep miner` ]] && groupadd -g 1800 miner #will remove later

function check_con () {
	while true; do
  		for con in `netstat -anp | grep TIME_WAIT | grep $port | awk '{print $5}'`; do
			echo -e "${YELLOW}> Trying to purge previous connections${WHITE}" 
			killcx $con lo #$?>/dev/null
  		done
		[[ `netstat -anp | grep TIME_WAIT | grep -c $port` -ne 0 ]] && continue || break
	done
}

[[ -z $1 || -z $2 ]] && echo -e "${RED}No config given${WHITE}" && read answer #&& exit 1

check_con $miner

while true; do
	if [[ ! -z $miner2Wait && $miner2Wait -gt 0 ]]; then
		miner1Start=`screen -ls | grep -E "miner1[^-]" | sed 's/.*(\(.*\))\s.*/\1/'`
		miner1StartTimeStamp=`date -d "$miner1Start" +"%s"`

		diff=`echo "$(date +%s) - $miner1StartTimeStamp" | bc -l`
		
		if [[ $diff -lt $miner2Wait ]]; then
			echo -en "${BROWN}> Wait some time before start miner ${WHITE}"

			while [[ $diff -lt $miner2Wait ]]; do
				echo -en "${BROWN}.${WHITE}"
				sleep 1
				diff=`echo "$(date +%s) - $miner1StartTimeStamp" | bc -l`
			done
			echo ""
			echo -e "${GREEN}> OK, we can start${WHITE}"
		fi
	fi
	sudo -g miner bash -c "$batch"
	exitcode=$?
	echo -e "${RED}Error on miner start: exitcode $exitcode${WHITE}"
	if [[ $exitcode -eq 127 ]]; then
		fork=`echo $batch | sed "s#cd /.* /dog/miners/$miner/\([-.a-zA-Z0-9]*\)/miner.*#\1#"`
		echo "> Trying to download miner by command getminer $miner $fork"
		/dog/getminer $miner $fork
	else
		echo -e "\n${RED}>Miner exited, waiting 3 seconds to restart${WHITE}\n"
	fi
	sleep 3
done
