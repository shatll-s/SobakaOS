#!/bin/bash
[ -t 1 ] && . colors #source colors only if running in terminal
NVIDIA_CFG="/sobaka/cfg/nvidia.cfg"
LOCK_FILE="/tmp/.nvidia-oc.lock"

function getdata () {
	for option in core_clock memory_clock power_limit pill pill_args light fan; do
		if [[ `echo $1 | jq ".$option"` != null ]]; then
			option_value="`echo $1 | jq -r \".$option\"`" #double slash, because eval open it
			eval "${option^^}=\"$option_value\""
		fi
	done
}

if  [[ -e $LOCK_FILE ]]; then
	pid=`cat $LOCK_FILE`
	ps --pid $pid &>/dev/null
	[[ $? == 0 ]] && echo -e "${RED}It seems another copy of NVIDIA Overclocking script is already running\nCooldown a bit :)${WHITE}" && exit 1	
fi
echo $$ > $LOCK_FILE

export DISPLAY=:0
function screen_kill () {
	local MINER_PID=$(screen -ls | grep "$1" | sed 's/\s\([0-9]*\)..*/\1/')
	[[ ! -z $MINER_PID ]]&& kill $MINER_PID
}

screen_kill pill

echo -e $BROWN"================================================================"$WHITE
n=$(gpu-detect NVIDIA)
[[ $n == 0 ]]&&	echo $(date --rfc-3339=seconds)" 0 NVIDIA GPU detected" && exit 1
echo -e $(date --rfc-3339=seconds)" $n ${GREEN}NVIDIA${WHITE} GPU detected"

if [[ ! -z $1 ]]; then
	echo "Overclocking config given in arguments"
	getdata "$1"
else
	[[ ! -f $NVIDIA_CFG ]]&& echo $(date --rfc-3339=seconds)" configuration file $NVIDIA_CFG does not exist!" && exit 1
	cfg=`cat $NVIDIA_CFG`
	echo $cfg | jq '.'  > /dev/null 2>&1
	exitcode="$?"
	if [[ $exitcode -eq 0 ]]; then
		echo "Overclocking config in JSON format (or empty)"
		getdata "$cfg"
	else
		echo "OverClocking config in BASH format"
		
		. $NVIDIA_CFG
	fi
fi

#Making arrays
CORE_CLOCK=($CORE_CLOCK)
MEMORY_CLOCK=($MEMORY_CLOCK)
FAN=($FAN)
PLIMIT=($PLIMIT)

for (( i=0; i < $n; ++i )); do
	[[ ! ${CORE_CLOCK[$i]} && ! -z ${CORE_CLOCK[0]} ]]&& CORE_CLOCK[$i]=${CORE_CLOCK[-1]}
	[[ ! ${MEMORY_CLOCK[$i]} && ! -z ${MEMORY_CLOCK[0]} ]]&& MEMORY_CLOCK[$i]=${MEMORY_CLOCK[-1]}
	[[ ! ${FAN[$i]} && ! -z ${FAN[0]} ]]&& FAN[$i]=${FAN[-1]}
	[[ ! ${PLIMIT[$i]} && ! -z ${PLIMIT[0]} ]]&& PLIMIT[$i]=${PLIMIT[-1]}
done

echo "Trying to apply next settings:"
echo -e ${CYAN}"Core Clock:${WHITE}\t${CORE_CLOCK[@]}"
echo -e ${CYAN}"Memory:${WHITE}\t\t${MEMORY_CLOCK[@]}"
echo -e ${CYAN}"Fan:${WHITE}\t\t${FAN[@]}"
echo -e ${CYAN}"Power limit:${WHITE}\t${PLIMIT[@]}"
echo -en ${CYAN}"Light:${WHITE}\t\t"
[[ $LIGHT_OFF == 1 ]] && echo "off" || echo "on"
echo -en ${CYAN}"Pill:${WHITE}\t\t"
[[ $PILL == 0 ]] && echo "off" || echo "on"
echo -e ${CYAN}"Pill args:${WHITE}\t$PILL_ARGS"
exit 0
#We need to do persistence-mode just once
nvidia-persistenced --persistence-mode
nvidia-smi -pm 1

echo -e $BROWN"================================================================"$WHITE
#starting overclocking

i=0
while read string; do
	echo -e ${GREEN}"gpu $i (PCI Bus $string)"${WHITE}
	name=`echo $string | awk -F ', ' '{print $2}'`
	
	if [[ $name =~ "1050" ]]; then x=2
		elif [[ $name =~ "P106-100" ]]; then x=2
		elif [[ $name =~ "P106-090" ]]; then x=1
		elif [[ $name =~ "P104-100" ]]; then x=1
		elif [[ $name =~ "P102-100" ]]; then x=1
		elif [[ $name =~ "1660" ]]; then x=4
		else x=3;
	fi

	args=
	[[ ! -z ${CORE_CLOCK[$i]} ]] && args+=" -a [gpu:$i]/GPUGraphicsClockOffset[$x]=${CORE_CLOCK[$i]}"
	[[ ! -z ${MEMORY_CLOCK[$i]} ]] && args+=" -a [gpu:$i]/GPUMemoryTransferRateOffset[$x]=${MEMORY_CLOCK[$i]}"
	if [[ ! -z ${FAN[$i]} && ${FAN[$i]} != "A" ]]; then
		args+=" -a [gpu:$i]/GPUFanControlState=1"
		args+=" -a [fan:$i]/GPUTargetFanSpeed=${FAN[$i]}"
	else
		args+=" -a [gpu:$i]/GPUFanControlState=0"
	fi
	[[ ! -z $LIGHT_OFF ]] && args+=" -a [gpu:$i]/GPULogoBrightness=0"
	#echo $args
	[[ ! -z $args ]] &&	nvidia-settings$args | sed -e "/^\s*$/d; s/'//g"
	[[ ! -z ${PLIMIT[$i]} ]] && echo -n "  " && nvidia-smi -i $i -pl ${PLIMIT[$i]}
	[[ $(($i + 1)) < $n ]] && echo -e $BROWN"----------------------------------------------------------------"$WHITE

	((i++))
done < <(/sobaka/gpu-detect NVIDIA list)

if [[ $PILL == 1 ]]; then
	if [[ ! -z $1 && $1 == "--pill-delay" ]]; then
		sleep=30 
		echo "Pill will be served after $sleep seconds"
	else
		sleep=0
 		echo "Pill is served"
	fi
 	screen -dmS pill bash -c "sleep $sleep; /sobaka/sbin/OhGodAnETHlargementPill-r2 $PILL_ARGS" &
fi
echo -e $BROWN"================================================================"$WHITE

rm $LOCK_FILE
